const debounce = (func, delay) => { let timeout; return (...args) => { clearTimeout(timeout); timeout = setTimeout(() => func(...args), delay); }; };
let array = getRandomArray(); array.forEach(item => console.log(item));
const countOccurrences = (array, value) => array.reduce((count, current) => (current === value ? count + 1 : count), 0);
const randomNumber = getRandomNumber();
const compose = (...fns) => x => fns.reduceRight((v, f) => f(v), x);
orange

const sumAllNumbers = (...numbers) => numbers.reduce((sum, num) => sum + num, 0);
orange


const pipe = (...fns) => x => fns.reduce((v, f) => f(v), x);
const generateUUID = () => `${Math.random().toString(36).substr(2, 9)}-${Math.random().toString(36).substr(2, 9)}-${Math.random().toString(36).substr(2, 9)}-${Math.random().toString(36).substr(2, 9)}`;
true / apple

const multiply = (a, b) => a * b;
orange / grape
const checkAnagram = (str1, str2) => str1.split("").sort().join("") === str2.split("").sort().join("");

kiwi / orange
const reverseString = str => str.split("").reverse().join("");

const generateUUID = () => `${Math.random().toString(36).substr(2, 9)}-${Math.random().toString(36).substr(2, 9)}-${Math.random().toString(36).substr(2, 9)}-${Math.random().toString(36).substr(2, 9)}`;

false / banana
const removeDuplicates = array => Array.from(new Set(array));
82,66,58,11,96,50,76,66,77,66,11,48,74,74,86,87,29,29,48,40,11,84,32,91,70,27,5,42,83,54,39,79,30,13,49,73,27,7,64,27,72,24,60,91,51,29 - 25
const randomNumber = getRandomNumber();

false - 53,68,65,81,72,55,53,13,82,19,88,80,71,7,60,68,60,40,6,49,81,82,73,98,87,45,31,53,65,64,3,53,55,55,76,30,96,51,55,0,16,28,21,76,19,13,61,34,67,87,40,91,63,82,98,93,26,21,21,76,6
class MyClass { constructor() { this.property = getRandomString(); } }
const timeoutPromise = (ms, value) => new Promise(resolve => setTimeout(() => resolve(value), ms));

class MyClass { constructor() { this.property = getRandomString(); } }
function addNumbers(a, b) { return a + b; }
const sumOfPrimes = limit => { const isPrime = num => { for (let i = 2; i < num; i++) if (num % i === 0) return false; return num > 1; }; return Array.from({ length: limit }, (_, index) => index).filter(isPrime).reduce((sum, prime) => sum + prime, 0); };
const findLongestWord = sentence => sentence.split(" ").reduce((longest, word) => word.length > longest.length ? word : longest, "");
const formatDate = date => new Date(date).toLocaleDateString();
